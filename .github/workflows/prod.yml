# This is a basic workflow to help you get started with Actions

name: Digital Ocean Kubernetes Test

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    tags:
      - '*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Kubernetes_Deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Save DigitalOcean kubeconfig
      uses: digitalocean/action-doctl@master
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      with:
        args: kubernetes cluster kubeconfig show selfequalsthis > $GITHUB_WORKSPACE/.kubeconfig

    - name: Allow Kubernetes to Pull Private Images
      run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig create secret docker-registry myregistrykey --docker-server=$DOCKER_REGISTRY_SERVER --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --docker-email=$DOCKER_EMAIL || echo "Secret Exists"
      env:
        DOCKER_REGISTRY_SERVER: ${{secrets.DOCKER_REGISTRY_SERVER}}
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_EMAIL: ${{secrets.DOCKER_EMAIL}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}

    - name: Run Kube Deploy
      run: |
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/ingress/vendor/nginx/mandatory.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/ingress/vendor/nginx/cloud-generic.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/ingress/ingress.prod.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/tls/namespace.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply --validate=false -f $GITHUB_WORKSPACE/tls/vendor/cert-manager/cert-manager.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/tls/prod-issuer.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/quantified-self-api/quantified-self-api-deployment.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/quantified-self-api/quantified-self-api-service.yaml --force
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/web/web-deployment.yaml
        kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/web/web-service.yaml --force